{
	"info": {
		"_postman_id": "912ff3ab-3bbc-43cc-8a0d-9e6821a58b29",
		"name": "tts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "TTS",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/ssml+xml",
						"type": "text"
					},
					{
						"key": "X-Microsoft-OutputFormat",
						"value": "audio-16khz-128kbitrate-mono-mp3",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "postman",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\r\n       xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\r\n    <voice xml:lang='en-US' name='en-US-GuyNeural'>\r\n        <mstts:express-as style=\"newscast\">\r\n            my voice is my passport <break time=\"100ms\" /> verify me\r\n        </mstts:express-as>\r\n    </voice>\r\n</speak>"
				},
				"url": {
					"raw": "https://eastus.tts.speech.microsoft.com/cognitiveservices/v1",
					"protocol": "https",
					"host": [
						"eastus",
						"tts",
						"speech",
						"microsoft",
						"com"
					],
					"path": [
						"cognitiveservices",
						"v1"
					]
				}
			},
			"response": []
		},
		{
			"name": "TTS Long",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": ""
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/ssml+xml"
					},
					{
						"key": "X-Microsoft-OutputFormat",
						"type": "text",
						"value": "audio-16khz-128kbitrate-mono-mp3"
					},
					{
						"key": "User-Agent",
						"type": "text",
						"value": "postman"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\" xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\r\n    <voice name=\"en-US-JennyNeural\">\r\n        <break time=\"2000ms\" />\r\n        <prosody rate=\"30%\" pitch=\"0%\">\r\n        <mstts:express-as style=\"chat\">\r\n                Before we start I want to disclose that all voices you hear during this presentation are synthesized. \r\n                All voices were produced using the Azure Text to Speech service which uses AI to simulate human voices.\r\n                All content in the presentation was made by Sameer Doshi, a cloud solutions architect at Microsoft and can be found on his GitHub under the Azure TTS repository.            \r\n                Ok, Aria, take it away!\r\n            <break time=\"300ms\" />\r\n        </mstts:express-as>\r\n        </prosody>\r\n        </voice>\r\n        <voice name=\"en-US-AriaNeural\">\r\n        <prosody rate=\"20%\" pitch=\"0%\">\r\n        <mstts:express-as style=\"chat\">\r\n                When I was 5 my friends and I had lots of fun during \"computer time\" at school.  We made the computer say silly things in a computerized voice using it's text to speech program.  Silly things like \r\n                <break time=\"200ms\" />\r\n                The cat ate the house,  \r\n                <break time=\"200ms\" />\r\n            <prosody rate=\"0%\" pitch=\"0%\">\r\n                The cat ate the house,  \r\n            </prosody>\r\n            \r\n                Trust mee, for a five year old, that is \r\n            \r\n        </mstts:express-as>\r\n        <mstts:express-as style=\"cheerful\">\r\n        hilarious.\r\n        </mstts:express-as>\r\n        <mstts:express-as style=\"chat\">\r\n                <break time=\"200ms\" />\r\n                Since then the quality and abilities of speech to text have come along way.  With Azure Text To Speech Service, TTS for short, we’ve made it easy to add speech to complex Health Care scenarios. \r\n                <break time=\"150ms\" />\r\n                After I go over technical capabilities of the TTS service, \r\n                <break time=\"50ms\" />\r\n                Gary will show you an example of TTS in Health Care,\r\n                <break time=\"50ms\" />\r\n                 and Jenny will share some example TTS scenarios for Health Care and Life Sciences companies\r\n        </mstts:express-as>\r\n        <break time=\"300ms\" />\r\n        <mstts:express-as style=\"newscast-casual\">\r\n          The Azure Text To Speech service is one of Azure's cognitive services.  Cognitive services let people and organizations easily use AI to enhance human abilities.  \r\n          Azure also offers human parity computer vision, speech, face, and sentiment recognition.  Along with other AI services.  \r\n          But today let's focus on the Text-To-Speech (TTS) service. It converts written text to high quality voices synthesized  via Neural networks.  \r\n          <break time=\"150ms\" />\r\n          TTS has over 150 voices in 50 languages.\r\n          <break time=\"150ms\" />\r\n          Each voice's pitch and speed can be adjusted, or different styles can be used.\r\n          For example:\r\n          <break time=\"150ms\" />\r\n        </mstts:express-as>\r\n        \r\n        <mstts:express-as style=\"empathetic\">\r\n            I am an empathetic voice. \r\n            <break time=\"150ms\" />\r\n        </mstts:express-as>\r\n        <mstts:express-as style=\"newscast-formal\">\r\n            I am a newscaster voice. \r\n        </mstts:express-as>\r\n        <mstts:express-as style=\"chat\">\r\n            I am a chat voice. \r\n            <break time=\"150ms\" />\r\n        </mstts:express-as>\r\n        \r\n        <mstts:express-as style=\"cheerful\">\r\n            I am a cheerful voice. \r\n            <break time=\"150ms\" />\r\n        </mstts:express-as>\r\n        <mstts:express-as style=\"newscast-casual\">\r\n            I am a casual newscaster voice. \r\n        </mstts:express-as>\r\n        <mstts:express-as style=\"customer-service\">\r\n            I am a customer service voice. \r\n            <break time=\"150ms\" />\r\n        </mstts:express-as>\r\n        <mstts:express-as style=\"chat\">\r\n            You can even train a custom voice.  \r\n            That’s right! You can make your voice into a TTS voice!   Microsoft believes in responsible AI, so in order to create a custom voice you’ll need to fill out a form that ensures you own the rights to the voice, and that your use of the custom voice complies with Microsoft’s guidelines on the responsible use of AI.  But after that, you can quickly train a neural network to talk like you by supplying it with recordings and transcripts of you talking!  Custom voices are a great way to ensure the accents, and speech patterns that make you, or your brand's voice are replicated by the AI!\r\n            If you want to hear a live example of  this just search for Microsoft’s partnership with BBC Radio. \r\n            Azure TTS is just as easy to use as other Azure Cognitive services.  \r\n            To use, simply make direct REST calls to the service, or use an SDK in C Sharp, Objective C, Java, JavaScript, or Python.  \r\n            Pass in the input text and the output is a compressed audio file.\r\n            <break time=\"150ms\" />\r\n            But enough abstract technical talk.  Let’s turn it over to my counterpart Gary  to talk through a real-life health care use of TTS. \r\n         </mstts:express-as>\r\n          </prosody>\r\n    </voice>\r\n    <voice xml:lang='en-US' name='en-US-GuyNeural'>\r\n        <prosody rate=\"27%\" pitch=\"-5%\">\r\n        <mstts:express-as style=\"newscast\">   \r\n                <break time=\"500ms\" />\r\n                Thanks Jenny!   \r\n                <break time=\"300ms\" />\r\n                Let’s make COVID-19 information on twitter more accessible.  \r\n                <break time=\"200ms\" />\r\n                Dr. Ashish Jha is the Dean of Brown University School of Public Health.  He often posts messages that are too long to fit into a single tweet, so Twitter breaks these messages into threads. \r\n                <break time=\"100ms\" />\r\n                The problem is that  OS level TTS can’t reconstitute these threads so instead of a smooth message.\r\n                Here's what a 3 part tweet sounds like.  I've trimmed Dr. Jha's message for this example.\r\n        </mstts:express-as>\r\n        </prosody>\r\n    </voice>\r\n    <voice xml:lang='en-US' name='en-US-Benjamin'>\r\n        <prosody rate=\"45%\" pitch=\"-5%\">\r\n            “Ashish K Jha MD MPH The rising proportion of…..” \r\n            “Ashish K Jha MD MPH replying to Ashish K Jha MD MPH: 2/3 and the effects of …..”\r\n            “Ashish K Jha MD MPH replying to Ashish K Jha MD MPH: 3/3 leads us to \r\n\r\n           \r\n        </prosody>\r\n        </voice>\r\n    <voice xml:lang='en-US' name='en-US-GuyNeural'>\r\n         <prosody rate=\"27%\" pitch=\"-5%\">\r\n            <mstts:express-as style=\"newscast\">   \r\n                <break time=\"200ms\" />\r\n                 Yikes! That’s hard to understand. Using a bit of text transformation and TTS we can instead make it sound like:\r\n                <break time=\"200ms\" />\r\n                 Ashish K Jha MD MPH: \"The rising proportion of …. And the effects of…. leads us to … .\"\r\n                 <break time=\"200ms\" />\r\n                 That's much better.\r\n                 Let's see how it works.\r\n                 <break time=\"500ms\" />\r\n                 Let's hop to the Azure Portal.\r\n                 <break time=\"500ms\" />\r\n                 I have all the code running as a LogicApp and you can find the code exported to Sameer Doshi's GitHub under the Azure TTS repo.\r\n                 <break time=\"750ms\" />\r\n                 This Logic App does the following:\r\n                <break time=\"150ms\" />\r\n                    It ingest tweets from Dr. Jha \r\n                <break time=\"150ms\" />\r\n                    It transforms thread text by ripping out redundant info \r\n                <break time=\"150ms\" />\r\n                    It runs the transformed text through TTS \r\n                <break time=\"150ms\" />\r\n                    It uploads the speech to blob \r\n                <break time=\"150ms\" />\r\n                    Finally it replies to the original tweet with a link to the TTS audio. \r\n                <break time=\"300ms\" />\r\n                    Follow Text to Speech on Twitter to see this logic app in action.  \r\n                <break time=\"200ms\" />\r\n                Let’s take a look at the TTS step.\r\n                You can see that it’s a simple rest call.  \r\n                The XML is written in the Speech Synthesis Markup Language format.\r\n                And this example is just about as complex as it gets. \r\n                If you look in Sameer's GitHub you can see the SSML for this entire presentation.                               \r\n                <break time=\"300ms\" />\r\n                 Let me turn it over to Jenny to talk through what Health Care Life Sciences companies could do with this easy to use, awesome tech. \r\n            </mstts:express-as> \r\n        </prosody>\r\n    </voice>\r\n <voice xml:lang='en-US' name='en-US-JennyNeural'>\r\n        <prosody rate=\"27%\" pitch=\"-5%\">\r\n        <mstts:express-as style=\"chat\">\r\n            <break time=\"300ms\" />\r\n            Thanks Gary. \r\n         <break time=\"100ms\" />\r\n            Gary didn’t mention that it took him less than 24 hours to go from no knowledge to the end to end app.  I bet most engineers would have similar, or faster, time to market.   But what could a Health Care or Life Sciences company do with this tech? \r\n            Here are 4 quick examples. \r\n            <break time=\"100ms\" />\r\n            You could just use the example I made above summarizing Tweets from your company's account. \r\n            <break time=\"300ms\" />\r\n            Or: Does your company send long emails or newsletters?  Perhaps you send a bi-weekly covid-19 update email?   Well why not publish that as a private podcast?  Then people will have one less email to read, and people could listen to it on their commute, or in true  pandemic fashion, on their exercise bike.  Keep people in your company up-to-date on lengthy topics easily.  Work for a hospital and want to keep staff up-to-date about the latest policies?  Publishing a private 3 minute podcast every week would be an efficient, easy way to reach everyone.  Or maybe you run a lab and want to let all lab users know about the new scheduling system.  Instead of an easily ignored email, quickly publish audio that explains the process.  A setup that takes in an email and publishes to a podcast library would probably take less than 24 hours to be fully implemented. \r\n            <break time=\"300ms\" />\r\n            Our third example takes the first one a bit further.  Your company could  have many people publish content as one person.  In this scenario, let’s say you’re a company that makes vaccines.  How powerful would it be to have a weekly web series where someone from research explains how your latest vaccine works.  And then, next week someone from compliance, in the same voice, explains the lengthy process to certify a vaccine as safe and effective.  Followed the next week, again, in the same voice,  someone from distribution explains the supply chain for vaccines.  All three people would submit written content that is then synthesized and presented as the one voice for your company.  No more having to green room, interview, review, and edit.  Instead content review is done up front, in writing, and only reviewed content is presented.  Changing content is as simple as cutting the old content and pasting the new content!  With custom voice you could even use your company’s branded voice- speaking with the authority of your SMEs!  \r\n            <break time=\"300ms\" />\r\n            In our fourth example- there’s lots of text in the world, but we don’t need all of it at all times.  Think about a patient chart- it has name, birthdate, and full medical history.  But the doctor moving from one room to another may only need to hear the latest info about the patient she’s about to see.   An app that could TTS the latest info on a patient would allow our doctor to get a summary while walking.   \r\n            <break time=\"100ms\" />\r\n        \r\n        </mstts:express-as>\r\n        <mstts:express-as style=\"assistant\">\r\n            Think about it, you have the power to make a voice say whatever you want!\r\n            Words matter, and when you can edit what you say just like you edit a document, the sky is the limit! \r\n            <break time=\"300ms\" />\r\n        </mstts:express-as>\r\n        </prosody>\r\n    </voice>\r\n    <voice xml:lang='en-US' name='en-US-GuyNeural'>\r\n        <prosody rate=\"20%\" pitch=\"-5%\">\r\n        <mstts:express-as style=\"chat\">   \r\n        Hi there, One last thing.  \r\n        </mstts:express-as>\r\n        <mstts:express-as style=\"empathetic\">   \r\n        While working on this I realized I could make a presentation where I never left something out, mispoke, or said something out of order.\r\n            And while that's pretty empowering- I also realized I was working by myself.\r\n            If there had actually been 3 co-presenters with me they would have offered valuable feedback.\r\n            <break time=\"100ms\" />\r\n            So bottom line:\r\n            <break time=\"100ms\" /> \r\n            while anyone, regardless of technical ability, can use AI to enhance their own abilities, AI cannot replace people.\r\n         <break time=\"300ms\" /> \r\n                    Thanks again for watching, I hope TTS helps you and if you have any questions please feel free to contact Sameer Doshi via GitHub.\r\n    </mstts:express-as>\r\n    </prosody>\r\n    </voice>\r\n</speak>"
				},
				"url": {
					"raw": "https://eastus.tts.speech.microsoft.com/cognitiveservices/v1",
					"protocol": "https",
					"host": [
						"eastus",
						"tts",
						"speech",
						"microsoft",
						"com"
					],
					"path": [
						"cognitiveservices",
						"v1"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Voices",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/ssml+xml",
						"type": "text",
						"disabled": true
					},
					{
						"key": "X-Microsoft-OutputFormat",
						"value": "audio-16khz-128kbitrate-mono-mp3",
						"type": "text",
						"disabled": true
					},
					{
						"key": "User-Agent",
						"value": "postman",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://eastus.tts.speech.microsoft.com/cognitiveservices/voices/list",
					"protocol": "https",
					"host": [
						"eastus",
						"tts",
						"speech",
						"microsoft",
						"com"
					],
					"path": [
						"cognitiveservices",
						"voices",
						"list"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}